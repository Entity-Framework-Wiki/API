// <auto-generated />
using System;
using API.Modules;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(GestionCommerceContext))]
    [Migration("20250509132959_Seed")]
    partial class Seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Modules.Billing.DAL.Facture.Facture", b =>
                {
                    b.Property<int>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("invoice_id");

                    b.Property<DateTime?>("DateFacture")
                        .HasColumnType("datetime")
                        .HasColumnName("date_facture");

                    b.Property<decimal?>("MontantTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montant_total");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Facture__F58DFD49F402E057");

                    b.HasIndex("OrderId");

                    b.ToTable("Facture", (string)null);

                    b.HasData(
                        new
                        {
                            InvoiceId = 1,
                            DateFacture = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MontantTotal = 1089.97m,
                            OrderId = 1
                        },
                        new
                        {
                            InvoiceId = 2,
                            DateFacture = new DateTime(2025, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MontantTotal = 299.99m,
                            OrderId = 2
                        });
                });

            modelBuilder.Entity("API.Modules.Billing.DAL.Paiement.Paiement", b =>
                {
                    b.Property<int>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    b.Property<DateTime?>("DatePaiement")
                        .HasColumnType("datetime")
                        .HasColumnName("date_paiement");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("invoice_id");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montant");

                    b.HasKey("PaymentId")
                        .HasName("PK__Paiement__ED1FC9EADD00F57C");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Paiement", (string)null);

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            DatePaiement = new DateTime(2025, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 1,
                            Montant = 1089.97m
                        },
                        new
                        {
                            PaymentId = 2,
                            DatePaiement = new DateTime(2025, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceId = 2,
                            Montant = 299.99m
                        });
                });

            modelBuilder.Entity("API.Modules.Orders.DAL.Commande.Commande", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<DateTime?>("DateCommande")
                        .HasColumnType("datetime")
                        .HasColumnName("date_commande");

                    b.Property<string>("Statut")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("statut");

                    b.HasKey("OrderId")
                        .HasName("PK__Commande__465962294B266D76");

                    b.ToTable("Commande", (string)null);

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            DateCommande = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Statut = "Livrée"
                        },
                        new
                        {
                            OrderId = 2,
                            DateCommande = new DateTime(2025, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Statut = "En cours"
                        },
                        new
                        {
                            OrderId = 3,
                            DateCommande = new DateTime(2025, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Statut = "Annulée"
                        });
                });

            modelBuilder.Entity("API.Modules.Orders.DAL.LigneCommande.LigneCommande", b =>
                {
                    b.Property<int>("LigneId")
                        .HasColumnType("int")
                        .HasColumnName("ligne_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<decimal?>("PrixUnitaire")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("prix_unitaire");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantite")
                        .HasColumnType("int")
                        .HasColumnName("quantite");

                    b.HasKey("LigneId")
                        .HasName("PK__LigneCom__CA8432CC6AE4D0D1");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("LigneCommande", (string)null);

                    b.HasData(
                        new
                        {
                            LigneId = 1,
                            OrderId = 1,
                            PrixUnitaire = 499.99m,
                            ProductId = 1,
                            Quantite = 2
                        },
                        new
                        {
                            LigneId = 2,
                            OrderId = 1,
                            PrixUnitaire = 89.99m,
                            ProductId = 2,
                            Quantite = 1
                        },
                        new
                        {
                            LigneId = 3,
                            OrderId = 2,
                            PrixUnitaire = 299.99m,
                            ProductId = 3,
                            Quantite = 1
                        });
                });

            modelBuilder.Entity("API.Modules.Products.DAL.Categorie.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .HasColumnType("int")
                        .HasColumnName("categorie_id");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nom");

                    b.HasKey("CategorieId")
                        .HasName("PK__Categori__55E5113F543E4EE1");

                    b.ToTable("Categorie", (string)null);

                    b.HasData(
                        new
                        {
                            CategorieId = 1,
                            Nom = "Électronique"
                        },
                        new
                        {
                            CategorieId = 2,
                            Nom = "Vêtements"
                        },
                        new
                        {
                            CategorieId = 3,
                            Nom = "Maison & Jardin"
                        });
                });

            modelBuilder.Entity("API.Modules.Products.DAL.Fournisseur.Fournisseur", b =>
                {
                    b.Property<int>("FournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("fournisseur_id");

                    b.Property<string>("Contact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contact");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nom");

                    b.HasKey("FournisseurId")
                        .HasName("PK__Fourniss__BDBA7AF07EEDB774");

                    b.ToTable("Fournisseur", (string)null);

                    b.HasData(
                        new
                        {
                            FournisseurId = 1,
                            Contact = "contact@fournisseur-electro.com",
                            Nom = "Fournisseur Électronique"
                        },
                        new
                        {
                            FournisseurId = 2,
                            Contact = "contact@fournisseur-mode.com",
                            Nom = "Fournisseur Mode"
                        },
                        new
                        {
                            FournisseurId = 3,
                            Contact = "contact@fournisseur-maison.com",
                            Nom = "Fournisseur Maison"
                        });
                });

            modelBuilder.Entity("API.Modules.Products.DAL.Inventaire.Inventaire", b =>
                {
                    b.Property<int>("InventoryId")
                        .HasColumnType("int")
                        .HasColumnName("inventory_id");

                    b.Property<int?>("FournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("fournisseur_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("InventoryId")
                        .HasName("PK__Inventai__B59ACC492F30A110");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventaire", (string)null);

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            FournisseurId = 1,
                            ProductId = 1,
                            Stock = 100
                        },
                        new
                        {
                            InventoryId = 2,
                            FournisseurId = 2,
                            ProductId = 2,
                            Stock = 200
                        },
                        new
                        {
                            InventoryId = 3,
                            FournisseurId = 3,
                            ProductId = 3,
                            Stock = 50
                        });
                });

            modelBuilder.Entity("API.Modules.Products.DAL.Marque.Marque", b =>
                {
                    b.Property<int>("MarqueId")
                        .HasColumnType("int")
                        .HasColumnName("marque_id");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nom");

                    b.HasKey("MarqueId")
                        .HasName("PK__Marque__769D72D6F0C3A0F1");

                    b.ToTable("Marque", (string)null);

                    b.HasData(
                        new
                        {
                            MarqueId = 1,
                            Nom = "Samsung"
                        },
                        new
                        {
                            MarqueId = 2,
                            Nom = "Nike"
                        },
                        new
                        {
                            MarqueId = 3,
                            Nom = "IKEA"
                        });
                });

            modelBuilder.Entity("API.Modules.Products.DAL.Produit.Produit", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("int")
                        .HasColumnName("categorie_id");

                    b.Property<int?>("MarqueId")
                        .HasColumnType("int")
                        .HasColumnName("marque_id");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nom");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("prix");

                    b.HasKey("ProductId")
                        .HasName("PK__Produit__47027DF580514356");

                    b.ToTable("Produit", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategorieId = 1,
                            MarqueId = 1,
                            Nom = "Chaussures de sport",
                            Prix = 499.99m
                        },
                        new
                        {
                            ProductId = 2,
                            CategorieId = 2,
                            MarqueId = 2,
                            Nom = "Télévision 4K",
                            Prix = 89.99m
                        },
                        new
                        {
                            ProductId = 3,
                            CategorieId = 3,
                            MarqueId = 3,
                            Nom = "Canapé 3 places",
                            Prix = 299.99m
                        });
                });

            modelBuilder.Entity("API.Modules.ReportsAnalytics.DAL.Rapport.Rapport", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<string>("Contenu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contenu");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime")
                        .HasColumnName("date_creation");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("ReportId")
                        .HasName("PK__Rapport__779B7C584AB1FA31");

                    b.ToTable("Rapport", (string)null);
                });

            modelBuilder.Entity("API.Modules.Billing.DAL.Facture.Facture", b =>
                {
                    b.HasOne("API.Modules.Orders.DAL.Commande.Commande", "Order")
                        .WithMany("Factures")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Facture__order_i__34C8D9D1");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("API.Modules.Billing.DAL.Paiement.Paiement", b =>
                {
                    b.HasOne("API.Modules.Billing.DAL.Facture.Facture", "Invoice")
                        .WithMany("Paiements")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK__Paiement__invoic__37A5467C");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("API.Modules.Orders.DAL.LigneCommande.LigneCommande", b =>
                {
                    b.HasOne("API.Modules.Orders.DAL.Commande.Commande", "Order")
                        .WithMany("LigneCommandes")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__LigneComm__order__30F848ED");

                    b.HasOne("API.Modules.Products.DAL.Produit.Produit", "Product")
                        .WithMany("LigneCommandes")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__LigneComm__produ__31EC6D26");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("API.Modules.Products.DAL.Inventaire.Inventaire", b =>
                {
                    b.HasOne("API.Modules.Products.DAL.Produit.Produit", "Product")
                        .WithMany("Inventaires")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Inventair__produ__2A4B4B5E");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("API.Modules.Billing.DAL.Facture.Facture", b =>
                {
                    b.Navigation("Paiements");
                });

            modelBuilder.Entity("API.Modules.Orders.DAL.Commande.Commande", b =>
                {
                    b.Navigation("Factures");

                    b.Navigation("LigneCommandes");
                });

            modelBuilder.Entity("API.Modules.Products.DAL.Produit.Produit", b =>
                {
                    b.Navigation("Inventaires");

                    b.Navigation("LigneCommandes");
                });
#pragma warning restore 612, 618
        }
    }
}
